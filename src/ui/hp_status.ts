// hp_status.ts
import p5 from "p5";

export type PlayerHp = {
  hp: number;
  hpMax: number;
};

/**
 * –ü–∞–Ω–µ–ª—å HP –∏–≥—Ä–æ–∫–∞:
 * - –§–æ–Ω —Ä–∏—Å—É–µ—Ç—Å—è –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É `w`
 * - –ü–æ–ª–æ—Å–∫–∞ HP –∑–∞–Ω–∏–º–∞–µ—Ç 70% –æ—Ç `w`, —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞
 */
export function drawHpStatus(
  p: p5,
  x: number,
  y: number,
  w: number,
  stats: PlayerHp,
  bgColor: string = "#f9edd6"
) {
  const fullH = 40; // –æ–±—â–∞—è –≤—ã—Å–æ—Ç–∞ –ø–∞–Ω–µ–ª–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º
  const barH = 28;

  const ratio = Math.max(0, Math.min(1, stats.hp / stats.hpMax));

  // üîπ –í—ã—á–∏—Å–ª–∏–º —É–∫–æ—Ä–æ—á–µ–Ω–Ω—É—é –ø–æ–ª–æ—Å–∫—É HP (70% —à–∏—Ä–∏–Ω—ã)
  const barW = Math.floor(w * 0.7);
  const barX = x + 12; // + Math.floor((w - barW) / 2);
  const barY = y;

  // üîπ –°–≤–µ—Ç–ª–∞—è –æ—Å–Ω–æ–≤–∞ –ø–æ–ª–æ—Å—ã
  p.fill("#e8d6cb");
  p.rect(barX, barY, barW, barH, 4);

  // üîπ –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å (–æ—Ä–∞–Ω–∂–µ–≤–∞—è)
  p.fill("#f1751a");
  p.rect(barX, barY, barW * ratio, barH, 4);

  // üîπ –†–∞–º–∫–∞
  p.noFill();
  p.stroke(120);
  p.strokeWeight(1);
  p.rect(barX, barY, barW, barH, 4);

  // üîπ –¢–µ–∫—Å—Ç HP
  p.noStroke();
  p.fill(20);
  p.textAlign(p.CENTER, p.CENTER);
  p.textSize(16);
  p.text(`${stats.hp}/${stats.hpMax}`, barX + barW / 2, barY + barH / 2);
}
